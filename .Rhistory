ns<-NS(id)
runApp()
runApp()
runApp()
runApp()
runApp()
filter(ships,ship_name,ship_type)
View(ships)
library(readr)
ships <- read_csv("src/ships.csv", col_types = cols(SPEED = col_skip(),
COURSE = col_skip(), HEADING = col_skip(),
FLAG = col_skip(), LENGTH = col_skip(),
SHIPTYPE = col_skip(), SHIP_ID = col_skip(),
WIDTH = col_skip(), DWT = col_skip(),
DATETIME = col_skip(), PORT = col_skip(),
week_nb = col_skip(), is_parked = col_skip()))
View(ships)
runApp()
filter(ships,ship_name,ship_type)
filter(ship_type=='cargo')
filter(ship_type=='Cargo')
filter(ships,ship_type=='Cargo')
filter(ships$SHIPNAME,ship_type=='Cargo')
x <- filter(ships,ship_type=='Cargo')$SHIPNAME
x <- dplyr::filter(ships,ship_type=='Cargo')$SHIPNAME
subset(ships,ship_type)
subset(ships,ship_type=='Cargo')
as.data.frame(subset(ships,ship_type=='Cargo'))
x<-as.data.frame(subset(ships,ship_type=='Cargo'))
View(x)
x<-as.data.frame(subset(ships,ship_type=='Cargo',select = 'SHIPNAME'))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readr)
library(shiny)
library(readr)
library(dplyr)
library(leaflet)
ships <- read_csv("src/ships.csv")
summary(ships)
View(ships)
get_names<-function(type){
choices <-as.data.frame(subset(ships,ship_type==type,select = 'SHIPNAME'))
return(choices)
}
View(ships)
get_names('Cargo')
get_names<-function(type){
x <- as.list(distinct(ships,ship_type))
return(x)
}
get_names('Cargo')
get_ship_type<-function(){
return(as.list(distinct(ships,ship_type)))
}
get_names('Cargo')
get_ship_type<-function(){
return(as.list(distinct(ships,ship_type)))
}
get_ship_type()
get_ship_type<-function(){
return(as.list(distinct(ships,ship_type)))
}
get_ship_type()
View(ships)
subset(ships,ship_type==type,select = 'SHIPNAME')%>%as.data.frame()%>%
distinct('SHIPNAME')
get_ship_names<-function(type){
x<-subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct('SHIPNAME')
return(x)
}
get_ship_names('Cargo')
get_ship_names<-function(type){
names <- distinct(
as.data.frame(
subset(ships,ship_type==type,select = 'SHIPNAME')
),
SHIPNAME
)
return(x)
}
get_ship_names('Cargo')
get_ship_names<-function(type){
names <- distinct(
as.data.frame(
subset(ships,ship_type==type,select = 'SHIPNAME')
),
SHIPNAME
)
return(names)
}
get_ship_names('Cargo')
n<-distinct(ships,SHIPNAME)
View(n)
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%as.data.frame()%>%
distinct(SHIPNAMES)%>%
#names <- distinct(as.data.frame(subset(ships,ship_type==type,select = 'SHIPNAME')),SHIPNAME)
return()
}
get_ship_names('Cargo')
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%as.data.frame()%>%
distinct(SHIPNAME)%>%
#names <- distinct(as.data.frame(subset(ships,ship_type==type,select = 'SHIPNAME')),SHIPNAME)
return()
}
get_ship_names('Cargo')
x<-get_ship_names('Cargo')
ships <- read_csv("src/ships.csv")
summary(ships)
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)%>%
return()
}
x<-get_ship_names('Cargo')
get_ship_type<-function(){
return(as.list(distinct(ships,ship_type)))
}
get_ship_type()
for(x in get_ship_type()){
s[x]<-get_ship_names(x)
}
c<-get_ship_type()
for(x in c){
s[x]<-get_ship_names(x)
}
get_ship_names<-function(type){
names <- subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)
return(names$ship_type)
}
s<-list()
for(x in get_ship_type()){
s[x]<-get_ship_names(x)
}
get_ship_names(x)
get_ship_names<-function(type){
names <- subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)
return(names$ship_type)
}
get_ship_names('Cargo')
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)
return()
}
get_ship_names('Cargo')
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)
return()
}
get_ship_names('Cargo')
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)%>%
return()
}
for(x in c$ship_type){
s[x]<-get_ship_names(x)
}
View(s)
runApp()
runApp()
runApp()
x <- as.data.frame(subset(ships,ship_type=='Cargo',select = 'SHIPNAME'))
View(x)
x <- as.data.frame(subset(ships,ship_type=='Cargo'))
View(x)
ships <- read_csv("src/ships.csv")
x <- as.data.frame(subset(ships,ship_type=='Cargo'))
View(x)
x <- as.data.frame(subset(ships,ship_type=='Cargo',SHIPNAME='KAROLI'))
x <- as.data.frame(subset(ships,ship_type=='Cargo',SHIPNAME = 'KAROLI'))
y <- as.data.frame(subset(ships,ship_type=='Cargo')
)
View(x)
filter(ships,SHIPNAME=='KAROLI')
X<-filter(ships,SHIPNAME=='KAROLI')
View(X)
X<-filter(S[['cargo']],SHIPNAME=='KAROLI')
X<-filter(s[['cargo']],SHIPNAME=='KAROLI')
X<-filter(s[['Cargo']],SHIPNAME=='KAROLI')
View(s)
X<-filter(s['Cargo'],SHIPNAME=='KAROLI')
View(s)
for(x in c$ship_type){
types[x]<-filter(ships,ship_type==x)
}
types<-list()
c<-get_ship_type()
for(x in c$ship_type){
types[x]<-filter(ships,ship_type==x)
}
View(types)
types$Cargo
<-as.data.frame(filter(ships,ship_type==x))
as.data.frame(filter(ships,ship_type==x))
for(x in c$ship_type){
types[x]<-as.data.frame(filter(ships,ship_type==x))
}
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)%>%
return()
}
types<-list()
c<-get_ship_type()
for(x in c$ship_type){
types[x]<-as.data.frame(filter(ships,ship_type==x))
}
types$Cargo
View(types)
View(types)
View(s)
list<-list()
get_ship_type<-function(){
return(as.list(distinct(ships,ship_type)))
}
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)%>%
return()
}
st <- get_ship_type()
for(i in st$ship_type){
print(i)
}
sn <- get_ship_names("Cargo")
View(sn)
x<-filter(ships,SHIPNAME=="KAROLI",ship_type=="Cargo")
x<-filter(ships,SHIPNAME=="KAROLI")
View(x)
x<-list()
list[1][1]<-0
View(list)
list[1][3]<-3
for(i in st$ship_type){
sn <- get_ship_names(type)
for(j in sn$SHIPNAME){
list[i,j] <- filter(ships,SHIPNAME==j)
}
}
for(i in st$ship_type){
sn <- get_ship_names(i)
for(j in sn$SHIPNAME){
list[i,j] <- filter(ships,SHIPNAME==j)
}
}
for(i in st$ship_type){
sn <- get_ship_names(i)
for(j in sn$SHIPNAME){
list[j] <- filter(ships,SHIPNAME==j)
}
}
filter(ships,SHIPNAME=='KAROLI')
x<-filter(ships,SHIPNAME=='KAROLI')
View(x)
summary(x)
arrange(ships,DATETIME)
arrange(x,DATETIME)
xx <- arrange(x,DATETIME)
View(xx)
filter(ships,SHIPNAME=='KAROLI')%>%arrange(DATETIME)
xc <- find_observations('KAROLI')
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%arrange(DATETIME)%>%return()
}
xc <- find_observations('KAROLI')
xc <- find_observations('KAROLI')
c <- find_observations('KAROLI')
View(c)
View(c)
v<-diff(c$LAT)
v
54.77127-54.76542
length(v)
tail(v)
View(c)
max(v)
b<-diff(c$DATETIME)
v[1]
b[1]
v[2]
b[2]
v[2]/b[2]
v[2]/as.numeric(b[2])
v[1]/as.numeric(b[1])
v[3]/as.numeric(b[3])
[1:100]
1:100
list <- list()
for(i in 1:100){
list[i] <- v[i]/as.numeric(b[i])
}
plot(list)
plot(1:100,list)
distinct(c$SPEED)
distinct(c,SPEED)
s_names <- get_ship_names('KAROLI')
s_type <- get_ship_type()
s_names <- get_ship_names('Cargo')
s_type <- get_ship_type()
library(readr)
library(readr)
library(dplyr)
library(leaflet)
ships <- read_csv("src/ships.csv")
get_ship_type<-function(){
return(as.list(distinct(ships,ship_type)))
}
get_ship_names<-function(type){
subset(ships,ship_type==type,select = 'SHIPNAME')%>%
as.data.frame()%>%
distinct(SHIPNAME)%>%
return()
}
s_names <- get_ship_names('Cargo')
s_type <- get_ship_type()
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%arrange(DATETIME)%>%return()
}
karoli <- find_observations('KAROLI')
distinct(karoli,SHIPSPEED)
View(karoli)
distinct(karoli,SPEED)
#Understanding Data
karoli$LAT[1]
dif <- karoli$LAT[1]-karoli$LAT[2]
dif
lat <- karoli$LAT[1]-karoli$LAT[2]
lon <- karoli$LON[1]-karoli$LON[2]
lat <- karoli$LAT[1]-karoli$LAT[2]**2
square()
install.packages("geosphere")
library(geosphere)
lat <- c(karoli$LAT[1],karoli$LON[1])
lon <- c(karoli$LAT[2],karoli$LON[2])
distHaversine(lat,lon)
distHaversine(karoli$LAT,karoli$LON)
View(diff)
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%
arrange(DATETIME)%>%
mutate(distance = distHaversine(lag(c(LAT,LON),default = 0),distHaversine(c(LAT,LON))))%>%
return()
}
find_observations('KAROLI')
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%
arrange(DATETIME)%>%
mutate(distance = LAT+LON)%>%
return()
}
karoli <- find_observations('KAROLI')
View(karoli)
distHaversine(lag(c(LAT,LON),default = 0),distHaversine(c(LAT,LON)))
rlang::last_error()
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%
arrange(DATETIME)%>%
mutate(distance = distHaversine(c(LAT,LON),c(lag(LAT),lag(LON))))%>%
return()
}
karoli <- find_observations('KAROLI')
mutate(karoli,
dist = mapply(function(p1, p2) distm(p1, p2, fun=distHaversine), c(LAT,LON),c(lag(LAT),lag(LON)))
)
karoli %>% rowwise() %>% mutate(
dist = distm(c(LON, LAT), c(lag(lON), lag(LAT)), fun=distHaversine) # this works
)
karoli %>% rowwise() %>% mutate(
dist = distm(c(LON, LAT), c(lag(lON,0), lag(LAT,0)), fun=distHaversine) # this works
)
View(karoli)
karoli %>% rowwise() %>% mutate(
dist = distm(c(LON, LAT), c(lag(LON,0), lag(LAT,0)), fun=distHaversine) # this works
)
View(karoli)
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%
arrange(DATETIME)%>%
rowwise() %>%
mutate(dist = distm(c(LON, LAT), c(lag(LON,0), lag(LAT,0)), fun=distHaversine))%>%
filter(max(dist))%>%
return()
}
karoli <- find_observations('KAROLI')
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%
arrange(DATETIME)%>%
rowwise() %>%
mutate(dist = distm(c(LON, LAT), c(lag(LON,0), lag(LAT,0)), fun=distHaversine))%>%
filter(dist==max(dist))%>%
return()
}
karoli <- find_observations('KAROLI')
View(karoli)
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%
arrange(DATETIME)%>%
rowwise() %>%
mutate(dist = distm(c(LON, LAT), c(lag(LON,0), lag(LAT,0)), fun=distHaversine))%>%
return()
}
karoli <- find_observations('KAROLI')
View(karoli)
distance_cal <- function(long1, lat1, long2, lat2) {
R <- 6371 # Earth mean radius [km]
delta.long <- (long2 - long1)
delta.lat <- (lat2 - lat1)
a <- sin(delta.lat/2)^2 + cos(lat1) * cos(lat2) * sin(delta.long/2)^2
c <- 2 * asin(min(1,sqrt(a)))
d = R * c
return(d) # Distance in km
}
d <- distance_cal(karoli$LON[1],karoli$LAT[1],karoli$LON[2],karoli$LAT[2])
distHaversine(lat,lon)
distHaversine(-lat,-lon)
distHaversine(c(karoli$LON[1],karoli$LAT[1]),c(karoli$LON[2],karoli$LAT[2]))
d <- distance_cal(karoli$LON[1],karoli$LAT[1],karoli$LON[2],karoli$LAT[2])
karoli$LON[1]
karoli$LAT[1]
karoli$LON[2]
karoli$LAT[2]
distHaversine(c(karoli$LON[1],karoli$LAT[1]),c(karoli$LON[2],karoli$LAT[2]))
lon1<-karoli$LON[1]
lat1<-karoli$LAT[1]
lon2<-karoli$LON[2]
lat2<-karoli$LAT[2]
p1<-c(lon1,lat1)
p2<-c(lon2,lat2)
distVincentyEllipsoid(p1,p2)
m<-c(19.0760,72.8777)
d<-c(28.7041, 77.1025)
distVincentyEllipsoid(m,d)
distVincentyEllipsoid(d,m)
distHaversine(m,d)
m<-c(72.8777,19.0760)
d<-c(77.1025,28.7041)
distHaversine(m,d)
distVincentyEllipsoid(d,m)
distHaversine(m,d,r=6357)
for(i in karoli){
print(i[["LAT"]])
}
for(i in karoli){
print(i["LAT"])
}
for(i in karoli){
print(i)
}
for(i in karoli$LAT){
print(i)
}
for(i in c(karoli$LAT,karoli$LON){
print(i)
}
for(i in c(karoli$LAT,karoli$LON)){
print(i)
}
distance_cal <- function(long,lat, long2, lat2) {
R <- 6371 # Earth mean radius [km]
delta.long <- (long2 - long1)
delta.lat <- (lat2 - lat1)
a <- sin(delta.lat/2)^2 + cos(lat1) * cos(lat2) * sin(delta.long/2)^2
c <- 2 * asin(min(1,sqrt(a)))
d = R * c
return(d) # Distance in km
}
distance_cal(m,d)
distance_cal(72.8777,19.0760,77.1025,28.7041)
distance_cal(72.8777,19.0760,77.1025,28.7041)
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%
arrange(DATETIME)%>%
mutate(dist = apply(distHaversine(
c(LON,LAT),
c(lag(LON),lag(LAT))
))
)%>%
return()
}
karoli <- find_observations('KAROLI')
find_observations <- function(ship_name){
filter(ships,SHIPNAME=='KAROLI')%>%
arrange(DATETIME)%>%
apply(distHaversine(
c(LON,LAT),
c(lag(LON),lag(LAT))
))%>%
return()
}
karoli <- find_observations('KAROLI')
